(function() {var implementors = {};
implementors["cursed_strings"] = [{"text":"impl&lt;A:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"struct\" href=\"cursed_strings/string_base/struct.StringBase.html\" title=\"struct cursed_strings::string_base::StringBase\">StringBase</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">]</a>&gt;&gt; for <a class=\"struct\" href=\"cursed_strings/string_base/struct.StringBase.html\" title=\"struct cursed_strings::string_base::StringBase\">StringBase</a>&lt;<a class=\"type\" href=\"generic_vec/type.HeapVec.html\" title=\"type generic_vec::HeapVec\">HeapVec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, A&gt;&gt;","synthetic":false,"types":["cursed_strings::string_base::StringBase"]}];
implementors["generic_vec"] = [{"text":"impl&lt;T, S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"generic_vec/raw/trait.Storage.html\" title=\"trait generic_vec::raw::Storage\">Storage</a>&lt;T&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"generic_vec/struct.GenericVec.html\" title=\"struct generic_vec::GenericVec\">GenericVec</a>&lt;T, S&gt;","synthetic":false,"types":["generic_vec::GenericVec"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()