(function() {var implementors = {};
implementors["cursed_strings"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"cursed_strings/struct.FromUtf8Error.html\" title=\"struct cursed_strings::FromUtf8Error\">FromUtf8Error</a>","synthetic":false,"types":["cursed_strings::owned_utf8::FromUtf8Error"]},{"text":"impl&lt;S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"generic_vec/raw/trait.Storage.html\" title=\"trait generic_vec::raw::Storage\">Storage</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"cursed_strings/struct.StringBase.html\" title=\"struct cursed_strings::StringBase\">StringBase</a>&lt;<a class=\"struct\" href=\"generic_vec/struct.GenericVec.html\" title=\"struct generic_vec::GenericVec\">GenericVec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>, S&gt;&gt;","synthetic":false,"types":["cursed_strings::string_base::StringBase"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"type\" href=\"cursed_strings/type.str32.html\" title=\"type cursed_strings::str32\">str32</a>","synthetic":false,"types":["cursed_strings::slice_utf32::str32"]},{"text":"impl&lt;S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"generic_vec/raw/trait.Storage.html\" title=\"trait generic_vec::raw::Storage\">Storage</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"cursed_strings/struct.StringBase.html\" title=\"struct cursed_strings::StringBase\">StringBase</a>&lt;<a class=\"struct\" href=\"generic_vec/struct.GenericVec.html\" title=\"struct generic_vec::GenericVec\">GenericVec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, S&gt;&gt;","synthetic":false,"types":["cursed_strings::string_base::StringBase"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"cursed_strings/struct.StringBase.html\" title=\"struct cursed_strings::StringBase\">StringBase</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">]</a>&gt;","synthetic":false,"types":["cursed_strings::string_base::StringBase"]}];
implementors["generic_vec"] = [{"text":"impl&lt;T, S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"generic_vec/raw/trait.Storage.html\" title=\"trait generic_vec::raw::Storage\">Storage</a>&lt;T&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"generic_vec/struct.GenericVec.html\" title=\"struct generic_vec::GenericVec\">GenericVec</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,&nbsp;</span>","synthetic":false,"types":["generic_vec::GenericVec"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()